@page "/primeiroCadastro"
@rendermode InteractiveServer
@using AppMulta.Models;
@using AppMulta.Controllers;
@inject VeiculoController VeiculoController
@inject MultaController MultaController
@inject NavigationManager navegacao

<h3>PRIMEIRO REGISTRO DE MULTA DO VEÍCULO</h3>

<div class="container">


    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">MODELO:</label>
        <input @bind="veiculo.Modelo" type="text" class="form-control" disabled="@campoBloqueado">
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">MARCA:</label>
        <input @bind="veiculo.Marca" type="text" class="form-control" disabled="@campoBloqueado">
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">PLACA:</label>
        <input @bind="veiculo.Placa" type="text" class="form-control" disabled="@campoBloqueado">
    </div>
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    @*###################################################################*@
    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">DESCRIÇÃO:</label>
        <input @bind="Descricao" type="text" class="form-control" disabled="@campoBloqueado">
    </div>
    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">VALOR :</label>
        <input @bind="ValorMulta" type="number" class="form-control" disabled="@campoBloqueado">
    </div>
    @if(enabledButton){
        <button type="button" class="btn btn-primary" @onclick="AddMulta">ADICIONAR</button>
        <button type="button" class="btn btn-warning" @onclick="Cancelar">CANCELAR</button>
        <button type="button" class="btn btn-success" @onclick="Salvar">SALVAR</button>
    }else{
         <div class="alert alert-success" role="alert">
            Salvo com Sucesso;
        </div>
        <button type="button" class="btn btn-primary" @onclick="NovoRegistro">NOVO REGISTRO</button>
    }
   
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <table class="table">
        <thead>
            <tr>
                <th>Descrição:</th>
                <th>Valor:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var multa in listaMultas)
            {
                <tr>
                    <td>@multa.Descricao</td>
                    <td>@multa.ValorMulta</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    public List<Multa> listaMultas = new List<Multa>(); // Lista de multas
    public Veiculo? veiculo = new Veiculo();
    private bool enabledButton = true;
    private bool campoBloqueado = false;
    public string? Descricao { get; set; }
    public decimal? ValorMulta { get; set; }

    public void AddMulta()
    {
        Multa multa = new Multa
        {
            Descricao = Descricao,
            ValorMulta = ValorMulta,
            IdVeiculo = veiculo.Id // Set the foreign key (will be updated after saving vehicle)
        };
        listaMultas.Add(multa);
        Descricao = null;
        ValorMulta = null;
    }

    private async Task Salvar()
    {
        try
        {
            // Associa as multas ao veículo
            veiculo.Multas = listaMultas;

            // Adiciona o veículo ao banco
            await VeiculoController.Add(veiculo);

            // Adiciona as multas ao banco
            await MultaController.AddRanger(listaMultas);

            // Salva tudo em uma única transação
            await VeiculoController.Salvar(); // This saves both Veiculo and Multa changes

            enabledButton = false;
            campoBloqueado = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao salvar: {ex.Message}");
            // Optionally, display an error message to the user
        }
    }

    public void Cancelar()
    {
        navegacao.NavigateTo("/primeiroCadastro", forceLoad: true);
    }

    public void NovoRegistro()
    {
        // Reinitialize the state for a new registration
        veiculo = new Veiculo();
        listaMultas = new List<Multa>(); // Clear the list to avoid reusing old objects
        Descricao = null;
        ValorMulta = null;
        enabledButton = true;
        campoBloqueado = false;
        navegacao.NavigateTo("/primeiroCadastro", forceLoad: true);
    }
}